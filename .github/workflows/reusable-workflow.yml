name: Deploy to Environment

on:
  workflow_call:
    inputs:
      env:
        description: "The name of environment (eg. STAGING, PRODUCTION, SAUCE-LABS)"
        required: true
        type: string
      env-url:
        description: "The URL of the environment"
        required: true
        type: string
      artifact-name:
        description: "The name of the artifact to download"
        required: true
        type: string

jobs:
  setup-environments:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.env }}
      url: ${{ inputs.env-url }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install required dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          sudo apt-get install -y firefox

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Verify repository contents
        run: ls -la

      - name: Set up virtual environment and install dependencies
        run: |
          uv venv -p 3.11 
          python -m pip install --upgrade pip 
          source .venv/bin/activate
          uv pip install -r requirements.txt
          ls -la

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install Firefox
        uses: browser-actions/setup-firefox@v1

      - name: Verify browser installation
        run: |
          firefox --version
          google-chrome --version

      - name: Create Logs Directory
        run: mkdir -p latest_logs/errors

      - name: Debug Environment Variables
        run: echo $BASE_URL

#      - name: Log in to the Platform
#        with:
#          OBI_USERNAME: ${{ secrets.OBI_USERNAME }}
#          OBI_PASSWORD: ${{ secrets.OBI_PASSWORD }}
#        run: echo "Logged in to the platform"

      - name: Set Environment Variables for Test Execution
        env:
          ENV_URL: ${{ secrets.ENV_URL }}
          ENV_NAME: ${{ inputs.env }}
        run: |
          echo "Running in $ENV_NAME environment with URL $ENV_URL"

      - name: Run Tests Based on Environment
        if: ${{ inputs.env == 'STAGING' }}
        env:
          ENV_URL: ${{ vars.STAGING_URL }}
          OBI_USERNAME: ${{ secrets.OBI_USERNAME }}
          OBI_PASSWORD: ${{ secrets.OBI_PASSWORD }}
        run: |
          echo "Running tests in $ENV_URL with Username $OBI_USERNAME"
          uv run pytest tests/test_login.py --env=staging --env_url=${{ secrets.ENV_URL }} --headless

      - name: Run Tests for Production
        if: ${{ inputs.env == 'PRODUCTION' }}
        env:
          ENV_URL: ${{ vars.PRODUCTION_URL }}
          OBI_USERNAME: ${{ secrets.OBI_USERNAME }}
          OBI_PASSWORD: ${{ secrets.OBI_PASSWORD }}
        run: |
          echo "Running PRODUCTION tests in $ENV_URL with Username $OBI_USERNAME"
          uv run pytest tests/test_login.py --env=production --env_url=${{ vars.PRODUCTION_URL }} --headless

      - name: Run Tests for Sauce Labs
        if: ${{ inputs.env == 'SAUCE-LABS' }}
        env:
          ENV_URL: ${{ vars.SAUCE_LABS_URL }}
          OBI_USERNAME: ${{ secrets.OBI_USERNAME }}
          OBI_PASSWORD: ${{ secrets.OBI_PASSWORD }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        run: |
          echo "Running SAUCE LABS tests in $ENV_URL with Username $OBI_USERNAME"
          uv run pytest tests/test_login.py --env=sauce-labs --env_url=${{ vars.SAUCE_LABS_URL }}